---
layout: post
title:  "Week 3 Part 2"
date:   2015-11-24 10:07:48 +0000
categories: week_3
---
I had my second quiz this week.  Just like I wrote in week 2, the quiz was actually more like a homework project.  This time, I had to implement a database and add SimpleForm to my app.  Once again, I used my personal project “Route 66 Virtual Walk” for Quiz 2.  I wanted to add SimpleForm so that the user can enter the date and their daily steps.  It took a long time before I finally started this project because I was somewhat scared about creating a database.  I heard many times that I should not edit the database table once I ran migration, so I couldn't get started because I was worried that I messed up a table.  I knew I could still “rollback” but what if I realized I made a mistake after I pushed my code in git?  I re-watched the “Web Application Overview” data migrations portion, and Googled how to edit a database table.  After I researched it, it looked like I could edit databases by using add_index and other statements like that so that part of the problem was solved.  However, another thing I was confused about was what type parameter I should be using for the user's date entry inside my migration table.  When we went through Splurty and Nomster, all the data is either a “text” or “string” type.  I wasn't sure I should be using “datetime” or “date”.  In the end, I just used “date” because I didn't think that the “time” entry was necessary.  Before I started, I was thinking about how I could make it easy for users to enter the date.  I wasn't sure if I should be implementing a nice calendar that could be clicked on or something like that.  It turned out that when I created a SimpleForm, it automatically implemented a dropdown menu!  I guess it was because I chose for the data type to be “date”?  Whatever made it happen... Neat!
<figure>
  <a href="/images/dailysteps_screenshot.png"><img src="/images/dailysteps_screenshot.png"></a>
  <figcaption>User can enter date and daily steps</figcaption>
</figure>
I also implemented code that calculates the distance walked and tracks the total distance walked.  I found a [site][tablegenerator] which generated CSS/HTML statements for a table so I used it to display the user's data and it looked quite nice.  I ended up hardcoding the stride length for now.  Eventually, I want to make it so that the user could enter their stride length. 
<figure>
  <a href="/images/table_screenshot.png"><img src="/images/table_screenshot.png"></a>
  <figcaption>My table is colorful!</figcaption>
</figure>

One last thing I did this week was that I finally decided to spend some time working on my blog.  During our first meeting, my mentor suggested that it was a good idea to record what I learn through the process and that my blog could be useful to others.  I read a bunch of blogs by the Firehose Project students, and I enjoyed reading them and I learned many things from them.  It is hard to imagine that my blog contains anything useful, but I agreed to write about my experience because creating a blog is also a learning process.  I am not a good writer and writing a blog is hard enough for me, so I didn't want to spend too much time creating a fancy website.  I wasn't sure about using WordPress because I have had some difficulties using it in the past.  I looked around, and Jekyll was interesting to me as it is similar to Rails.  On Sunday morning, I watched a video of the past [Firehose Lightning talk about Jekyll][firehose_community_video], read [“Helpful Jekyll Resources”][helpful_jekyll_resource] on the Firehose Community page, and decided to dive in.  I installed Jekyll and ran a couple of commands and it created a web page for me.  It was that easy.  The resource page had all the commands I needed to type.  The only thing I had to do which wasn't in the documentation was that I had to type `$ rebenv rehash` after `$eval “(rbenv init -)` to make things work (don't ask me what the “rehash” command does.  I just Googled around and found the commands).  After I entered a blog entry and was satisfied with this basic blog, I decided to see if I could get a custom theme.  I found a site which had several themes but I didn't know how to install them.  Then, I found the “minimal mistake” theme which had good installation instructions, and decided to go for it.  So here's my blog with the “minimal mistake” theme!  

Since I started the Firehose Project, the three weeks went by super fast.  I wrote about week 3 and I just read what I wrote and it looked like I did a lot.  But this week I felt like I didn't have enough time and I didn't get as much done as I wanted to.  I have so much stuff I want to do.  I want get my two personal projects done while I am still a student of the Firehose Project, but so far only the homepage and a part of another page of my first project are done.  I also want to spend more time studying Ruby and JavaScript, and I want to understand more about active resources on Rails, I want to tweak some functions of my Splurty and Nomster, I want to learn more about [lots of stuff – I have a long list], but it just seems that time was going  super fast and there is a lot more stuff that I wanted to do than I actually got done.  

[tablegenerator]: http://www.csstablegenerator.com/?table_id=3
[firehose_community_video]: https://youtu.be/XoqQQe8Qq1k
[helpful_jekyll_resource]: http://community.thefirehoseproject.com/2015/07/31/Helpful-Jekyll-Resources.html